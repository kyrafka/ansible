---
# ==========================================================
# CONFIGURACIÓN DE WINDOWS POST-INSTALACIÓN
# ==========================================================
- name: "Confirmar que el usuario administrador de Ansible existe"
  ansible.windows.win_user:
    name: "{{ win_admin_user }}"
    password: "{{ win_admin_password }}"
    state: present
    groups:
      - Administrators
    password_never_expires: true
    update_password: on_create
  delegate_to: "{{ vm_facts.instance.ipv4 | first }}"
  vars:
    ansible_connection: winrm
    ansible_winrm_transport: ntlm
    ansible_winrm_server_cert_validation: ignore
    ansible_user: "{{ vmware.initial_user | default('Administrator') }}"
    ansible_password: "{{ vmware.initial_password | default(win_admin_password) }}"

- name: "Asegurar que el servicio WinRM esté iniciado y en automático"
  ansible.windows.win_service:
    name: WinRM
    state: started
    start_mode: auto
  delegate_to: "{{ vm_facts.instance.ipv4 | first }}"
  vars:
    ansible_connection: winrm
    ansible_winrm_transport: ntlm
    ansible_winrm_server_cert_validation: ignore
    ansible_user: "{{ vmware.initial_user | default('Administrator') }}"
    ansible_password: "{{ vmware.initial_password | default(win_admin_password) }}"

- name: "Establecer la zona horaria"
  ansible.windows.win_timezone:
    timezone: SA Pacific Standard Time
  delegate_to: "{{ vm_facts.instance.ipv4 | first }}"
  vars:
    ansible_connection: winrm
    ansible_winrm_transport: ntlm
    ansible_winrm_server_cert_validation: ignore
    ansible_user: "{{ win_admin_user }}"
    ansible_password: "{{ win_admin_password }}"

- name: "Crear usuario pcgamer"
  ansible.windows.win_user:
    name: pcgamer
    password: "{{ win_admin_password }}"
    state: present
    groups:
      - Administrators
      - Remote Desktop Users
    password_never_expires: true
    update_password: on_create
  delegate_to: "{{ vm_facts.instance.ipv4 | first }}"
  vars:
    ansible_connection: winrm
    ansible_winrm_transport: ntlm
    ansible_winrm_server_cert_validation: ignore
    ansible_user: "{{ win_admin_user }}"
    ansible_password: "{{ win_admin_password }}"

- name: "Habilitar Escritorio Remoto (RDP)"
  ansible.windows.win_regedit:
    path: HKLM:\System\CurrentControlSet\Control\Terminal Server
    name: fDenyTSConnections
    data: 0
    type: dword
  delegate_to: "{{ vm_facts.instance.ipv4 | first }}"
  vars:
    ansible_connection: winrm
    ansible_winrm_transport: ntlm
    ansible_winrm_server_cert_validation: ignore
    ansible_user: "{{ win_admin_user }}"
    ansible_password: "{{ win_admin_password }}"
  when: enable_rdp | default(false)

- name: "Habilitar reglas de firewall para RDP"
  ansible.windows.win_shell: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
  args:
    executable: powershell.exe
  delegate_to: "{{ vm_facts.instance.ipv4 | first }}"
  vars:
    ansible_connection: winrm
    ansible_winrm_transport: ntlm
    ansible_winrm_server_cert_validation: ignore
    ansible_user: "{{ win_admin_user }}"
    ansible_password: "{{ win_admin_password }}"
  when: enable_rdp | default(false)

- name: "Crear directorio C:\\Games"
  ansible.windows.win_file:
    path: "C:\\Games"
    state: directory
  delegate_to: "{{ vm_facts.instance.ipv4 | first }}"
  vars:
    ansible_connection: winrm
    ansible_winrm_transport: ntlm
    ansible_winrm_server_cert_validation: ignore
    ansible_user: "{{ win_admin_user }}"
    ansible_password: "{{ win_admin_password }}"

- name: "Aplicar ACLs para el grupo pcgamer"
  ansible.windows.win_acl:
    path: "C:\\Games"
    user: "pcgamer"
    rights: Modify
    type: allow
    inherit: ContainerInherit, ObjectInherit
    propagation: None
    state: present
  delegate_to: "{{ vm_facts.instance.ipv4 | first }}"
  vars:
    ansible_connection: winrm
    ansible_winrm_transport: ntlm
    ansible_winrm_server_cert_validation: ignore
    ansible_user: "{{ win_admin_user }}"
    ansible_password: "{{ win_admin_password }}"