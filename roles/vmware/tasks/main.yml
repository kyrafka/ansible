- name: "Aviso: Asegurar que la colección requerida esté presente"
  ansible.builtin.debug:
    msg: "Requiere la colección community.vmware. Instálala con: ansible-galaxy collection install -r collections/requirements.yml"

- name: "Verificar si la VM existe"
  community.vmware.vmware_guest_info:
    hostname: "{{ vmware.hostname }}"
    username: "{{ vmware.username }}"
    password: "{{ vmware.password }}"
    validate_certs: "{{ vmware.validate_certs | default(false) }}"
    name: "{{ vmware.vm_name }}"
  register: vm_info
  delegate_to: localhost

- name: "Crear VM desde plantilla si no existe"
  community.vmware.vmware_guest:
    hostname: "{{ vmware.hostname }}"
    username: "{{ vmware.username }}"
    password: "{{ vmware.password }}"
    validate_certs: "{{ vmware.validate_certs | default(false) }}"
    datacenter: "{{ vmware.datacenter }}"
    esxi_hostname: "{{ vmware.esxi_hostname }}"
    name: "{{ vmware.vm_name }}"
    template: "{{ vmware.template }}"
    state: poweredon
    networks:
      - name: "{{ vmware.network_name }}"
    hardware:
      memory_mb: "{{ vmware.memory_mb }}"
      num_cpus: "{{ vmware.cpu }}"
  when: vm_info.instance is not defined and vmware.template | length > 0
  delegate_to: localhost

- name: "Crear VM desde ISO si no existe"
  community.vmware.vmware_guest:
    hostname: "{{ vmware.hostname }}"
    username: "{{ vmware.username }}"
    password: "{{ vmware.password }}"
    validate_certs: "{{ vmware.validate_certs | default(false) }}"
    datacenter: "{{ vmware.datacenter }}"
    esxi_hostname: "{{ vmware.esxi_hostname }}"
    name: "{{ vmware.vm_name }}"
    state: poweredon
    guest_id: "{{ vmware.guest_id }}"
    disk:
      - size_gb: "{{ vmware.disk_gb }}"
        type: thin
        datastore: "{{ vmware.datastore }}"
    hardware:
      memory_mb: "{{ vmware.memory_mb }}"
      num_cpus: "{{ vmware.cpu }}"
    networks:
      - name: "{{ vmware.network_name }}"
    cdrom:
      type: iso
      iso_path: "{{ vmware.iso_datastore_path }}"
    boot:
      delay: 0
  when: vm_info.instance is not defined and (vmware.template | length == 0)
  delegate_to: localhost  