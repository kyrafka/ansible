- name: Verificar que los paquetes de servicios necesarios estén instalados
  ansible.builtin.package_facts:
    manager: apt

- name: Verificar servicios instalados vs necesarios
  ansible.builtin.debug:
    msg: "Servicio {{ item }} - Paquete instalado: {{ ansible_facts.packages[item] is defined }}"
  loop: "{{ servicios_necesarios }}"

- name: Obtener información de servicios (service_facts)
  ansible.builtin.service_facts:

- name: Mostrar tiempo de actividad del sistema (uptime)
  ansible.builtin.command: uptime
  register: r_uptime
  changed_when: false

- name: Top 5 procesos por uso de CPU
  ansible.builtin.command: bash -lc "ps -eo pid,comm,%cpu,%mem --sort=-%cpu | head -n 6"
  register: r_topcpu
  changed_when: false

- name: Top 5 procesos por uso de memoria
  ansible.builtin.command: bash -lc "ps -eo pid,comm,%mem,%cpu --sort=-%mem | head -n 6"
  register: r_topmem
  changed_when: false

- name: Listar servicios necesarios y su estado
  ansible.builtin.debug:
    msg: "{{ item }} -> {{ services['services'][item + '.service'].state | default('desconocido') }}"
  loop: "{{ servicios_necesarios }}"
  vars:
    services: "{{ ansible_facts }}"

- name: Asegurar que los servicios necesarios estén habilitados y activos
  ansible.builtin.systemd_service:
    name: "{{ item }}"
    state: started
    enabled: true
  loop: "{{ servicios_necesarios }}"
  when: ansible_facts.packages[item] is defined or item in ['ssh', 'cron', 'NetworkManager', 'systemd-timesyncd', 'rsyslog']

- name: Comprobar si hay servicios fallados
  ansible.builtin.command: systemctl --failed --no-legend
  register: r_failed
  failed_when: false
  changed_when: false

- name: Reiniciar servicios fallados (si existen)
  ansible.builtin.shell: |
    for s in $(systemctl --failed --no-legend | awk '{print $1}'); do
      systemctl restart "$s" || true
    done
  when: r_failed.stdout | trim | length > 0

- name: Resumen de diagnóstico (uptime/cpu/mem)
  ansible.builtin.debug:
    msg:
      - "TIEMPO DE ACTIVIDAD: {{ r_uptime.stdout }}"
      - "TOP CPU:\n{{ r_topcpu.stdout }}"
      - "TOP MEM:\n{{ r_topmem.stdout }}"
